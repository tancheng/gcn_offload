=====================================================================
Computation w/o data movement:
---------------------------------------------------------------------
offloaded C implementation: 5 opt/cycle (2GHz MacOS single softcore)
pytorch: 50 opt/cycle (2GHz MacOS 4 hardcores, though there are more)
=====================================================================
[MM -- (1000 x 1000) x (1000 x 1000)] (second)
2d                   : 1.3
2d_8vec               : 1.2
2d_c2r               : 0.9
2d_c2r_8vec           : 0.13*
2d_tile              : 0.6
2d_tile_c2r          : 0.44
2d_tile_8vec          : 0.4
2d_tile_c2r_8vec      : 0.35

pytorch (all CPUs)   : 0.007
pytorch (single CPU) : 0.03

The results are kind of comparable enough, since our code are not
manully coded in assembly and probably without efficient SIMD
support, instead, pytorch leverages BLAST that is well optimized.
=====================================================================
[2 layer CORA GCN -- (2708 x 2708) x (1433 -> 16 -> 7)] (second)
single_c2r                       : 9.9
single_c2r_4vec                  : 3.7
mpi_c2r_4vec                     : 1.7


pytorch (all CPUs)               : 0.05
pytorch (single CPU)             : 0.2
pytorch_geometric (all CPUs)     : 0.01
pytorch_geometric (single CPU)   : 0.01 (no change)

This is also comparable and reasonable enough. Pytorch_geometric
performs better since it leverages other optimization techniques,
such as csr format.
=====================================================================
